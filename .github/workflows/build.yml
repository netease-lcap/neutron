name: build

on: push

permissions:
  contents: write

jobs:
  build-for-windows:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout from neutron
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node 20.10.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - name: Make Neutron App
        run: npm install && npm run make

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build@${{ matrix.os }}
          path: out/make

  build-for-macos:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout from neutron
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node 20.10.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - name: Install the Apple certificate and provisioning profile
        env:
          A_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.A_BUILD_PROVISION_PROFILE_BASE64 }}
          B_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.B_BUILD_PROVISION_PROFILE_BASE64 }}
          C_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.C_BUILD_PROVISION_PROFILE_BASE64 }}
          DEVELOPER_ID_APPLICATION_BASE64: ${{ secrets.DEVELOPER_ID_APPLICATION_BASE64 }}
          DEVELOPER_ID_INSTALLER_BASE64: ${{ secrets.DEVELOPER_ID_INSTALLER_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          A_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          B_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          C_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$DEVELOPER_ID_APPLICATION_BASE64" | base64 --decode -o DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH
          echo -n "$DEVELOPER_ID_INSTALLER_BASE64" | base64 --decode -o DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH
          echo -n "$A_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $A_PP_PATH
          echo -n "$B_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $B_PP_PATH
          echo -n "$C_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $C_PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $A_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $B_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $C_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          security find-identity -p codesigning -v

      - name: Make Neutron App
        run: npm install && npm run make
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build@${{ matrix.os }}
          path: out/make

  build-for-macos-intel:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13]

    steps:
      - name: Checkout from neutron
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node 20.10.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - name: Install the Apple certificate and provisioning profile
        env:
          A_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.A_BUILD_PROVISION_PROFILE_BASE64 }}
          B_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.B_BUILD_PROVISION_PROFILE_BASE64 }}
          C_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.C_BUILD_PROVISION_PROFILE_BASE64 }}
          DEVELOPER_ID_APPLICATION_BASE64: ${{ secrets.DEVELOPER_ID_APPLICATION_BASE64 }}
          DEVELOPER_ID_INSTALLER_BASE64: ${{ secrets.DEVELOPER_ID_INSTALLER_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          A_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          B_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          C_PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$DEVELOPER_ID_APPLICATION_BASE64" | base64 --decode -o DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH
          echo -n "$DEVELOPER_ID_INSTALLER_BASE64" | base64 --decode -o DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH
          echo -n "$A_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $A_PP_PATH
          echo -n "$B_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $B_PP_PATH
          echo -n "$C_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $C_PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import DEVELOPER_ID_APPLICATION_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import DEVELOPER_ID_INSTALLER_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $A_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $B_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $C_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          security find-identity -p codesigning -v

      - name: Make Neutron App
        run: npm install && npm run make-intel
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build@${{ matrix.os }}@intel
          path: out/make